name: release
on:
  push:
    branches:
      - main
permissions:
  contents: write
  pull-requests: write
jobs:
  release:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        package: ["kali-linux"]
    defaults:
      run:
        working-directory: ${{ matrix.package }}
    steps:
      - uses: actions/checkout@v4
      - name: Get Dockerfiles
        id: get-dockerfiles
        run: |
          DOCKERFILES=$(find . -maxdepth 1 -name "Dockerfile.*" | sort | jq -Rsc 'split("\n")[0:-1]')
          echo "dockerfiles=$DOCKERFILES" >> "$GITHUB_OUTPUT"
          cat "$GITHUB_OUTPUT"
      - uses: shiron-dev/actions/matrix-output-write@cf9f923728a28e230c4dcececa30f00b6d10cd05 # v1.2.0
        with:
          matrix-step-name: ${{ github.job }}
          matrix-key: ${{ matrix.package }}
          outputs: |-
            dockerfiles: ${{ steps.get-dockerfiles.outputs.dockerfiles }}
  release-read:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: release
    outputs:
      result: ${{ steps.vars.outputs.result }}
    steps:
      - uses: shiron-dev/actions/matrix-output-read@cf9f923728a28e230c4dcececa30f00b6d10cd05 # v1.2.0
        id: read
        with:
          matrix-step-name: release
      - name: Check outputs
        id: vars
        run: |
          echo "result=$(echo '${{ steps.read.outputs.result }}' | jq -c '.[] | [.key as $k | .value.dockerfiles[] | {key: $k, value: .}]')" >> "$GITHUB_OUTPUT"
  docker-build:
    needs: release-read
    runs-on: ubuntu-latest
    timeout-minutes: 360
    strategy:
      matrix:
        kv: ${{ fromJson(needs.release-read.outputs.result) }}
    name: docker-build ${{ matrix.kv.key }} (${{ matrix.kv.value }})
    steps:
      - uses: actions/checkout@v4
      - name: Set outputs
        id: vars
        run: |
          echo "tag=$(jq -r '.["${{ matrix.kv.key }}"]' .release-please-manifest.json)" >> "$GITHUB_OUTPUT"
          echo "platform=$(./scripts/get_platform.sh ${{ matrix.kv.key }}/${{ matrix.kv.value }})" >> "$GITHUB_OUTPUT"
          echo "ghcr_repo='ghcr.io/${{ github.repository_owner }}/${{ matrix.kv.key }}'" >> "$GITHUB_OUTPUT"
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ steps.vars.outputs.ghcr_repo }}
      - uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_PAT }}
      - uses: docker/setup-qemu-action@53851d14592bedcffcf25ea515637cff71ef929a # v3
      - uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3
      # - name: Build and push
      #   uses: docker/build-push-action@b32b51a8eda65d6793cd0494a773d4f6bcef32dc # v6
      #   id: build
      #   with:
      #     context: ${{ needs.release.outputs.package }}
      #     platforms: ${{ steps.vars.outputs.platform }}
      #     file: "${{ needs.release.outputs.package }}/${{ matrix.dockerfile }}"
      #     labels: ${{ steps.meta.outputs.labels }}
      #     outputs: type=image,"name=${{ steps.vars.outputs.ghcr_repo }}",push-by-digest=true,name-canonical=true,push=true
      - id: build
        run: |
          echo "digest=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)" >> "$GITHUB_OUTPUT"
      - uses: ./matrix-output-write
        with:
          matrix-step-name: ${{ github.job }}
          matrix-key: ${{ matrix.kv.key }}
          outputs: |-
            ${{ matrix.kv.value }}=${{ steps.build.outputs.digest }}
  docker-build-read:
    needs: release-read
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: shiron-dev/actions/matrix-output-read@cf9f923728a28e230c4dcececa30f00b6d10cd05 # v1.2.0
        id: read
        with:
          matrix-step-name: docker-build
      - name: Check outputs
        id: vars
        run: |
          echo '${{ steps.read.outputs.result }}'
          echo "result=$(echo '${{ steps.read.outputs.result }}' | jq -c '.[] | [.key as $k | .value[] | {key: $k, value: .}]')" >> "$GITHUB_OUTPUT"


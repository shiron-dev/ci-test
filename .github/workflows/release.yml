name: release
on:
  push:
    branches:
      - main
permissions:
  contents: write
  pull-requests: write
jobs:
  release:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        package: ["kali-linux"]
    defaults:
      run:
        working-directory: ${{ matrix.package }}
    steps:
      - uses: actions/checkout@v4
      - name: Get Dockerfiles
        id: get-dockerfiles
        run: |
          DOCKERFILES=$(find . -maxdepth 1 -name "Dockerfile.*" | sort | jq -Rsc 'split("\n")[0:-1]')
          echo "dockerfiles=$DOCKERFILES" >> "$GITHUB_OUTPUT"
          cat "$GITHUB_OUTPUT"
      - uses: shiron-dev/actions/matrix-output-write@cf9f923728a28e230c4dcececa30f00b6d10cd05 # v1.2.0
        with:
          matrix-step-name: ${{ github.job }}
          matrix-key: ${{ matrix.package }}
          outputs: |-
            dockerfiles: ${{ steps.get-dockerfiles.outputs.dockerfiles }}
  release-read:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: release
    outputs:
      result: ${{ steps.read.outputs.result }}
    steps:
      - uses: shiron-dev/actions/matrix-output-read@cf9f923728a28e230c4dcececa30f00b6d10cd05 # v1.2.0
        id: read
        with:
          matrix-step-name: release
      - name: Check outputs
        run: |
          echo "result=$(echo '${{ steps.read.outputs.result }}' | jq '.[] | [.key as $k | .value.dockerfiles[] | {key: $k, value: .}]')" >> "$GITHUB_OUTPUT"
  docker-build:
    needs: release-read
    runs-on: ubuntu-latest
    timeout-minutes: 360
    strategy:
      matrix:
        kv: ${{ fromJson(needs.release-read.outputs.result) }}
    name: docker-build ${{ matrix.kv.key }} (${{ matrix.kv.value }})
    steps:
      - uses: actions/checkout@v4
      - name: Set outputs
        id: vars
        run: |
          echo "tag=$(jq -r '.["${{ matrix.kv.key }}"]' .release-please-manifest.json)" >> "$GITHUB_OUTPUT"
          echo "platform=$(./scripts/get_platform.sh ${{ matrix.kv.key }}/${{ matrix.kv.value }})" >> "$GITHUB_OUTPUT"
      - name: Check outputs
        run: echo ${{ steps.vars.outputs.tag }}
